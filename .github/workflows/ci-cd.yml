name: ResumeChallenge CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'yarn'
        
    - name: Install dependencies
      working-directory: ./frontend
      run: yarn install
      
    - name: Build
      working-directory: ./frontend
      run: yarn build

    - name: Deploy to S3
      if: github.ref == 'refs/heads/main'
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: 'us-east-1'
        S3_BUCKET: ${{ secrets.S3_BUCKET }}
      working-directory: ./frontend
      run: |
        yarn global add aws-cli
        aws s3 sync dist/ s3://$S3_BUCKET --delete

  test_backend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v4
    - name: Install backend dependencies
      working-directory: ./backend
      run: yarn install
      
    - name: Run tests
      working-directory: ./backend
      run: yarn test

  deploy_backend:
      name: deploy_backend
      runs-on: ubuntu-latest
      strategy:
        matrix:
          node-version: [18.x]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            cache: 'yarn'

        - name: Install serverless
          run: yarn global add serverless

        - name: Login to Serverless
          run: yarn serverless login
          working-directory: ./backend
          env:
            SERVERLESS_ACCESS_KEY: ${{ secrets.SERVERLESS_ACCESS_KEY }}
            SERVERLESS_SECRET_KEY: ${{ secrets.SERVERLESS_SECRET_KEY }}

        - name: Deploy backend
          if: github.ref == 'refs/heads/main'
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: 'us-east-1'
          run: |
            yarn global add serverless
            yarn serverless deploy
          working-directory: ./backend
